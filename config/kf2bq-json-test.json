{
  "id": "schemaname",
  "name": "schemaname",
  "version": "version1",
  "schemas": [
    {
      "type": "json",
      "id": "jsonschema1",
      "name": "jsonschema1Name",
      "version": "version1",
      "definition": {
        "type": "jsondefinition",
        "name": "Test",
        "fields": [
          {
            "mode": "required",
            "name": "id",
            "type": "String"
          },
          {
            "mode": "nullable",
            "name": "creationDate",
            "type": "String"
          },
          {
            "mode": "nullable",
            "name": "customerRef",
            "type": "String"
          },
          {
            "mode": "nullable",
            "name": "source",
            "type": "record",
            "fields": [
              {
                "mode": "nullable",
                "name": "channelRef",
                "type": "String"
              }
            ]
          },
          {
            "mode": "nullable",
            "name": "betTypeRef",
            "type": "String"
          },
          {
            "mode": "nullable",
            "name": "isSettled",
            "type": "Boolean"
          }
        ]
      }
    }
  ],
  "lookups": [],
  "taps": [
    {
      "type": "kafka",
      "id": "kafkasource1",
      "bootstrap": "35.197.234.116:9092",
      "topic": "my-topic",
      "group": "pai-test-group",
      "defaultOffset": "latest",
      "autoCommit": false
    },
    {
      "type": "bigquery",
      "id": "bigquerysource1",
      "dataset": "bi_crm_poc",
      "table": "kafka_test",
      "createDisposition": "CREATE_IF_NEEDED",
      "writeDisposition": "WRITE_APPEND"
    }
  ],
  "steps": [
    {
      "type": "source",
      "id": "in",
      "name": "in",
      "schema": "jsonschema1",
      "source": "kafkasource1"
    },
    {
      "type": "transformation",
      "id": "mapper",
      "name": "mapper",
      "op": "map",
      "params": [["m => { val t = Helper.fmt.print(Helper.Instant.now()); if (t(15) != 'a') m.append('ts, t) else throw new Exception }"]],
      "paramsEncoded": false
    },
    {
      "type": "sink",
      "id": "out",
      "name": "out",
      "source": "bigquerysource1"
    }
  ],
  "dag": [
    {
      "from": "in",
      "to": "mapper"
    },
    {
      "from": "mapper",
      "to": "out"
    }
  ]
}