{
  "name": "schemaname",
  "version": "version1",
  "schemas": [
    {
      "type": "protobuf",
      "id": "protoschema1",
      "version": "version2",
      "definition": {
        "type": "protobufdefinition",
        "name": "Message",
        "schemaBase64": "cGFja2FnZSBjb3JlOw0KDQpvcHRpb24gamF2YV9wYWNrYWdlID0gInBhcmFsbGVsYWkuc290LmV4ZWN1dG9yLmJ1aWxkZXIuU09UQnVpbGRlciI7DQpvcHRpb24gamF2YV9vdXRlcl9jbGFzc25hbWUgPSAiQ29yZU1vZGVsIjsNCg0KbWVzc2FnZSBNZXNzYWdlIHsNCiAgICANCiAgIA0KICAgIHJlcXVpcmVkIHN0cmluZyB1c2VyID0gMTsNCiAgICByZXF1aXJlZCBzdHJpbmcgdGVhbU5hbWUgPSAyOw0KICAgIHJlcXVpcmVkIGludDY0IHNjb3JlID0gMzsNCiAgICByZXF1aXJlZCBpbnQ2NCBldmVudFRpbWUgPSA0Ow0KICAgIHJlcXVpcmVkIHN0cmluZyBldmVudFRpbWVTdHIgPSA1Ow0KDQp9",
        "doc": "A basic schema for storing user records"
      }
    },
    {
      "type": "bigquery",
      "id": "bigqueryschema1",
      "version": "version3",
      "definition": {
        "type": "bigquerydefinition",
        "name": "BigQueryRow",
        "fields": [
          {
            "mode": "REQUIRED",
            "name": "user",
            "type": "STRING"
          },
          {
            "mode": "REQUIRED",
            "name": "teamName",
            "type": "STRING"
          },
          {
            "mode": "REQUIRED",
            "name": "score",
            "type": "INTEGER"
          },
          {
            "mode": "REQUIRED",
            "name": "eventTime",
            "type": "INTEGER"
          },
          {
            "mode": "REQUIRED",
            "name": "eventTimeStr",
            "type": "STRING"
          }
        ]
      }
    }
  ],
  "taps": [
    {
      "type": "pubsub",
      "id": "pubsubsource1",
      "topic": "p2pin"
    },
    {
      "type": "bigquery",
      "id": "bigquerysource1",
      "dataset": "bigquerytest",
      "table": "streaming_word_extract26"
    }
  ],
  "steps": [
    {
      "type": "source",
      "name": "in",
      "schema": "protoschema1",
      "source": "pubsubsource1"
    },
    {
      "type": "transformation",
      "name": "filter",
      "op": "filter",
      "func": "m => m.get('score) > 2"
    },
    {
      "type": "sink",
      "name": "out",
      "schema": "bigqueryschema1",
      "source": "bigquerysource1"
    }
  ],
  "dag": [
    {
      "from": "in",
      "to": "filter"
    },
    {
      "from": "filter",
      "to": "out"
    }
  ]
}