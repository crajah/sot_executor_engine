{
  "in": {
    "type": "PubSub",
    "serialization": "Avro",
    "name": "Message",
    "topic": "p2pin",
    "schema": {
      "type": "record",
      "name": "Message",
      "namespace": "parallelai.sot.avro",
      "fields": [
        {
          "name": "user",
          "type": "string",
          "doc": "Name of the user"
        },
        {
          "name": "teamName",
          "type": "string",
          "doc": "Name of the team"
        },
        {
          "name": "score",
          "type": "int",
          "doc": "User score"
        },
        {
          "name": "eventTime",
          "type": "long",
          "doc": "time when event created"
        },
        {
          "name": "eventTimeStr",
          "type": "string",
          "doc": "event time string for debugging"
        }
      ],
      "doc": "A basic schema for storing user records"
    }
  },
  "out": {
    "type": "PubSub",
    "serialization": "Avro",
    "name": "MessageExtended",
    "topic": "p2pout",
    "schema": {
      "type": "record",
      "name": "MessageExtended",
      "namespace": "parallelai.sot.avro",
      "fields": [
        {
          "name": "user",
          "type": "string",
          "doc": "Name of the user"
        },
        {
          "name": "teamName",
          "type": "string",
          "doc": "Name of the team"
        },
        {
          "name": "score",
          "type": "int",
          "doc": "User score"
        },
        {
          "name": "eventTime",
          "type": "long",
          "doc": "time when event created"
        },
        {
          "name": "eventTimeStr",
          "type": "string",
          "doc": "event time string for debugging"
        },
        {
          "name": "count",
          "type": "int",
          "doc": "example count"
        }
      ],
      "doc": "A basic schema for storing user records"
    }
  },
  "steps": [
    {
      "type": "transformation",
      "name": "mapper1",
      "op": "map",
      "func": "m => MessageExtended(m.user, m.teamName, m.score, m.eventTime, m.eventTimeStr, 1)"
    }
  ],
  "dag": "mapper1"
}