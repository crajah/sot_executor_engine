{
  "name": "schemaname",
  "version": "version1",
  "schemas": [
    {
      "type": "avro",
      "name": "avroschema1",
      "version": "version2",
      "definition": {
        "type": "record",
        "name": "Message",
        "namespace": "parallelai.sot.avro",
        "fields": [
          {
            "name": "user",
            "type": "string",
            "doc": "Name of the user"
          },
          {
            "name": "teamName",
            "type": "string",
            "doc": "Name of the team"
          },
          {
            "name": "score",
            "type": "int",
            "doc": "User score"
          },
          {
            "name": "eventTime",
            "type": "long",
            "doc": "time when event created"
          },
          {
            "name": "eventTimeStr",
            "type": "string",
            "doc": "event time string for debugging"
          }
        ],
        "doc": "A basic schema for storing user records"
      }
    }
  ],
  "sources": [
    {
      "type": "pubsub",
      "name": "pubsubsource1",
      "topic": "p2pout"
    },
    {
      "type": "bigtable",
      "name": "bigtablesource1",
      "instanceId": "bigtable-test",
      "tableId": "bigquerytest",
      "numNodes": 3,
      "familyName": ["cf"]
    }
  ],
  "steps": [
    {
      "type": "source",
      "name": "in",
      "schema": "avroschema1",
      "source": "pubsubsource1"
    },
    {
      "type": "transformation",
      "name": "mapper1",
      "op": "map",
      "func": "m => (m.teamName, m.score.toInt)"
    },
    {
      "type": "transformation",
      "name": "filter",
      "op": "filter",
      "func": "m => m.score > 2"
    },
    {
      "type": "transformation",
      "name": "mapper2",
      "op": "map",
      "func": "m => BigTableRecord(m._1, (\"cf\", \"counter\", m._2), (\"cf\", \"counter2\", m._2 * 1.225))"
    },
    {
      "type": "transformation",
      "name": "sumByKey",
      "op": "sumByKey",
      "func": ""
    },
    {
      "type": "sink",
      "name": "out",
      "source": "bigtablesource1"
    }
  ],
  "dag": [
    {
      "from": "in",
      "to": "filter"
    },
    {
      "from": "filter",
      "to": "mapper1"
    },
    {
      "from": "mapper1",
      "to": "sumByKey"
    },
    {
      "from": "sumByKey",
      "to": "mapper2"
    },
    {
      "from": "mapper2",
      "to": "out"
    }
  ]
}